{
  "stats": {
    "suites": 7,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2018-10-21T02:43:45.295Z",
    "end": "2018-10-21T02:44:09.071Z",
    "duration": 23776,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "366854f0-128d-4106-9871-7318e5b0a4ed",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "74d0c710-c0d0-4e74-adf5-c083432a7b68",
        "title": "Rest Countries API - Test Suite",
        "fullFile": "/Users/irfannoor/Documents/GitHubRepo/ApiJavaScripAutomation/specs/Test_GetCountry.js",
        "file": "/specs/Test_GetCountry.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "f91a3be7-1e99-417b-a52f-9c707ce2a712",
            "title": "Basic Shakedown Tests",
            "fullFile": "/Users/irfannoor/Documents/GitHubRepo/ApiJavaScripAutomation/specs/Test_GetCountry.js",
            "file": "/specs/Test_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Name' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Name' Api response is OK",
                "timedOut": false,
                "duration": 1751,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_NAME = \"Australia\"\nbyName_response = await Get_ByName(test.data);\nexpect(byName_response.status).to.equal(200);\nexpect(byName_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "abd8ee49-2a58-44ec-9490-54f0d352d3c4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Code' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Code' Api response is OK",
                "timedOut": false,
                "duration": 1326,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"\nbyCode_response = await Get_ByCode(test.data);\nexpect(byCode_response.status).to.equal(200);\nexpect(byCode_response.data).to.include.any.keys( 'name', 'topLevelDomain',\n'alpha2Code','alpha3Code','callingCodes','capital','altSpellings','region',\n'subregion','population','demonym','area','nativeName','numericCode','currencies');",
                "err": {},
                "isRoot": false,
                "uuid": "a2c40edc-2014-41ba-8b34-81e3d6197997",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Capital' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Capital' Api response is OK",
                "timedOut": false,
                "duration": 2038,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CAPITAL = \"Canberra\",\nbyCapital_response = await Get_ByCapital(test.data);\nexpect(byCapital_response.status).to.equal(200);\nexpect(byCapital_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "0e4e9693-3d6b-413c-9f9a-c7ad40b821fc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Region' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Region' Api response is OK",
                "timedOut": false,
                "duration": 1220,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_REGION = \"Oceania\"\nbyRegion_response = await Get_ByRegion(test.data);\nexpect(byRegion_response.status).to.equal(200);\nexpect(byRegion_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "13b217bb-b7a9-4d84-a177-643b3fb9e67b",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "abd8ee49-2a58-44ec-9490-54f0d352d3c4",
              "a2c40edc-2014-41ba-8b34-81e3d6197997",
              "0e4e9693-3d6b-413c-9f9a-c7ad40b821fc",
              "13b217bb-b7a9-4d84-a177-643b3fb9e67b"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6335,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "55df8360-646b-47a0-9edd-ade18cbbca3c",
            "title": "Functional Tests",
            "fullFile": "/Users/irfannoor/Documents/GitHubRepo/ApiJavaScripAutomation/specs/Test_GetCountry.js",
            "file": "/specs/Test_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "timedOut": false,
                "duration": 4524,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"   //Australia\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'name', 'capital',);\nexpect(byCapital_response.data[0]).to.include.any.keys( 'name', 'capital',);\n//Verify capital_name in 'Name Api' using 'Capital Api'\nexpect(byName_response.data[0].capital).to.equal(byCapital_response.data[0].capital);",
                "err": {},
                "isRoot": false,
                "uuid": "93521164-2d6f-4c32-bf85-ff308b64a93f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 3812,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"CN\"  //CHINA\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'population');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'population',);\n//Verify Population value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.population).to.equal(byName_response.data[0].population);\nexpect(byCode_response.data.population).to.equal(byCapital_response.data[0].population);\nexpect(byName_response.data[0].population).to.equal(byCapital_response.data[0].population);",
                "err": {},
                "isRoot": false,
                "uuid": "f6fca98f-db50-4242-9914-cc3537a843e7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 4072,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"PK\"  //PAKISTAN\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'area');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'area',);\n//Verify AREA value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.area).to.equal(byName_response.data[0].area);\nexpect(byCode_response.data.area).to.equal(byCapital_response.data[0].area);\nexpect(byName_response.data[0].area).to.equal(byCapital_response.data[0].area);",
                "err": {},
                "isRoot": false,
                "uuid": "73b8944a-fb1b-440a-9da3-933581eb05fe",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "93521164-2d6f-4c32-bf85-ff308b64a93f",
              "f6fca98f-db50-4242-9914-cc3537a843e7",
              "73b8944a-fb1b-440a-9da3-933581eb05fe"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 12408,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "44109cc6-ac06-4710-beb9-056dd9bfcbff",
        "title": "Postman Echo API Suite - GET",
        "fullFile": "/Users/irfannoor/Documents/GitHubRepo/ApiJavaScripAutomation/specs/Test_echoGet.js",
        "file": "/specs/Test_echoGet.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "86feda37-b568-4b88-9b3d-113c2a42a011",
            "title": "Basic Test",
            "fullFile": "/Users/irfannoor/Documents/GitHubRepo/ApiJavaScripAutomation/specs/Test_echoGet.js",
            "file": "/specs/Test_echoGet.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - GET Basic Test Test 1",
                "timedOut": false,
                "duration": 3753,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanGet(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "048046f0-6c37-486a-bb75-8e86b735eb5a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "048046f0-6c37-486a-bb75-8e86b735eb5a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3753,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "942fac91-fe5f-4858-8607-5bf7aed1f879",
        "title": "Postman Echo API Suite - POST",
        "fullFile": "/Users/irfannoor/Documents/GitHubRepo/ApiJavaScripAutomation/specs/Test_echoPost.js",
        "file": "/specs/Test_echoPost.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "749e5df0-dc76-4aa5-99fa-c455c419e29f",
            "title": "Basic Test",
            "fullFile": "/Users/irfannoor/Documents/GitHubRepo/ApiJavaScripAutomation/specs/Test_echoPost.js",
            "file": "/specs/Test_echoPost.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - POST Basic Test Test 1",
                "timedOut": false,
                "duration": 1262,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanPost(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "398cf10f-1138-4706-be3a-b0096ddfd29e",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "398cf10f-1138-4706-be3a-b0096ddfd29e"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1262,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}