{
  "stats": {
    "suites": 14,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-05T09:52:30.998Z",
    "end": "2019-02-05T09:53:16.724Z",
    "duration": 45726,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b6bc81b1-4c98-4467-b926-7b51a7a830af",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "ebe45c27-eb91-4073-8da3-556e15608cbf",
        "title": "Current Weather Data API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T1_GetCurrentWeather.js",
        "file": "\\specs\\T1_GetCurrentWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "70ad6169-406f-41fb-9043-d87e8f8e3b84",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T1_GetCurrentWeather.js",
            "file": "\\specs\\T1_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "fullTitle": "Current Weather Data API - Test Suite Basic Shakedown Tests Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "timedOut": false,
                "duration": 1507,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat=0&lon=0&key='+data.ApiKey;\nconsole.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n     \nexpect(currentResponseBody.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "1c452da1-2d29-4890-aab8-d4cc8d2e6bbe",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1c452da1-2d29-4890-aab8-d4cc8d2e6bbe"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1507,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "fba971bd-d5b5-4c4e-adf6-fb8ee23f8550",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T1_GetCurrentWeather.js",
            "file": "\\specs\\T1_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "fullTitle": "Current Weather Data API - Test Suite Functional Tests Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "timedOut": false,
                "duration": 1375,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat='+data.Current[2].Lat+'&lon='+data.Current[2].Lon+'&key='+data.ApiKey;\nconsole.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n\nexpect(currentResponseBody.data[0]).to.include.any.keys( 'state_code');\n\nexpect(currentResponseBody.data[0].state_code).not.to.be.null;",
                "err": {},
                "isRoot": false,
                "uuid": "0cd1a9da-0842-4f8f-be92-6e0432cb2e98",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0cd1a9da-0842-4f8f-be92-6e0432cb2e98"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1375,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "f1240159-352d-4c7f-a1fc-8161dcc84d76",
        "title": "Forecast Weather Data API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T2_GetForecastWeather.js",
        "file": "\\specs\\T2_GetForecastWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "736f702d-88e1-4197-a57d-14a6b85a72fa",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T2_GetForecastWeather.js",
            "file": "\\specs\\T2_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "fullTitle": "Forecast Weather Data API - Test Suite Basic Shakedown Tests Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "timedOut": false,
                "duration": 1293,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code=28546&key='+data.ApiKey;\nconsole.log(\"Running Test for Forecast by Postal Code\"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n     \nexpect(forecastResponseBody.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "04f0a33d-bc15-47e7-a9a4-c3612228e743",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "04f0a33d-bc15-47e7-a9a4-c3612228e743"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1293,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "774c693d-a131-4b54-ad75-186d0e5484c8",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T2_GetForecastWeather.js",
            "file": "\\specs\\T2_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "timedOut": false,
                "duration": 1404,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[2].Postal_Code+'&key='+data.ApiKey;\n\nconsole.log(\"Running Test for Forecast by Postal Code\"+testData);\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj).to.include.any.keys('timestamp_utc');\n    expect(dataObj.timestamp_utc).not.to.be.null;\n    // console.log(\"timestamp_utc = \"+dataObj.timestamp_utc);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "6a596978-5088-4605-9556-25730630b103",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "timedOut": false,
                "duration": 1635,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[2].Postal_Code+'&key='+data.ApiKey;\nconsole.log(\"Running Test for \"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj.weather).to.include.any.keys('icon','code','description');\n    \n    expect(dataObj.weather).not.to.be.null;\n    expect(dataObj.weather.icon).not.to.be.null;\n    expect(dataObj.weather.code).not.to.be.null;\n    expect(dataObj.weather.description).not.to.be.null;\n    // console.log(\"weather = \"+dataObj.weather);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "aeb500c1-6d43-426b-a343-601bdaac1ee6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6a596978-5088-4605-9556-25730630b103",
              "aeb500c1-6d43-426b-a343-601bdaac1ee6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3039,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "e2cfd432-ce32-4912-81ee-0dd29ab1d01b",
        "title": "Performance Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T3_PerformanceTest.js",
        "file": "\\specs\\T3_PerformanceTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verify Response Time less than 3500 ms per API call when both APIs are called 10times",
            "fullTitle": "Performance Test Suite Verify Response Time less than 3500 ms per API call when both APIs are called 10times",
            "timedOut": false,
            "duration": 25663,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"Expected Response Time per Api Request Call = \"+expectedApiResponseTime+\" ms\");\n      \nfor(var i = 0; i < 10; i++) {\n  // console.log(\"Calling APIs in \"+i+\" iteration\")\n  \n  testData1 = data.BaseURL+'current/?lat='+data.Current[i].Lat+'&lon='+data.Current[i].Lon+'&key='+data.ApiKey;\n  testData2 = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[i].Postal_Code+'&key='+data.ApiKey;\n  currentResponse = await Get_CurrentByGPSCoordinates(testData1);\n  forecastResponse = await Get_ForecastByPostalCode(testData2);\n  expect(currentResponse.statusCode).to.equal(200);  \n  expect(currentResponse.elapsedTime).to.lessThan(expectedApiResponseTime);\n  \n  expect(forecastResponse.statusCode).to.equal(200);\n  expect(forecastResponse.elapsedTime).to.lessThan(expectedApiResponseTime);\n  // console.log(\">>> Response Code of \\'Current Weather By GPS Coordinates\\' Api = \"+currentResponse.statusCode);\n  // console.log(\">>> Response Time of \\'Current Weather By GPS Coordinates\\' Api = \"+currentResponse.elapsedTime);\n  // console.log(\">>> Response Time of \\'Forecast Weather By Postal Code\\' Api = \"+forecastResponse.statusCode);\n  // console.log(\">>> Response Time of \\'Forecast Weather By Postal Code\\' Api = \"+forecastResponse.elapsedTime);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "41b93db9-573d-44f3-82c2-bad77255ec2a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "41b93db9-573d-44f3-82c2-bad77255ec2a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 25663,
        "root": false,
        "rootEmpty": false,
        "_timeout": 500000
      },
      {
        "uuid": "c6e1f879-cde7-49c4-9384-633d3b27e7ad",
        "title": "Rest Countries API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T4_GetCountry.js",
        "file": "\\specs\\T4_GetCountry.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "ceb405f5-2b7a-474f-af6b-f124b3c38838",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T4_GetCountry.js",
            "file": "\\specs\\T4_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Name' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Name' Api response is OK",
                "timedOut": false,
                "duration": 934,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_NAME = \"Australia\"\nbyName_response = await Get_ByName(test.data);\nexpect(byName_response.status).to.equal(200);\nexpect(byName_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "01e9e6cf-0df5-4ec8-8ba2-ff424410f4d8",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Code' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Code' Api response is OK",
                "timedOut": false,
                "duration": 822,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"\nbyCode_response = await Get_ByCode(test.data);\nexpect(byCode_response.status).to.equal(200);\nexpect(byCode_response.data).to.include.any.keys( 'name', 'topLevelDomain',\n'alpha2Code','alpha3Code','callingCodes','capital','altSpellings','region',\n'subregion','population','demonym','area','nativeName','numericCode','currencies');",
                "err": {},
                "isRoot": false,
                "uuid": "8e4d34f8-b1b7-4c78-9dd6-5ece74f20d83",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Capital' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Capital' Api response is OK",
                "timedOut": false,
                "duration": 873,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CAPITAL = \"Canberra\",\nbyCapital_response = await Get_ByCapital(test.data);\nexpect(byCapital_response.status).to.equal(200);\nexpect(byCapital_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "440b3b1f-8b8c-49e0-93dc-e568a8fb6d7c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Region' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Region' Api response is OK",
                "timedOut": false,
                "duration": 1251,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_REGION = \"Oceania\"\nbyRegion_response = await Get_ByRegion(test.data);\nexpect(byRegion_response.status).to.equal(200);\nexpect(byRegion_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "f495a6a7-d5a6-4a29-a9dc-c253295a2aa8",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "01e9e6cf-0df5-4ec8-8ba2-ff424410f4d8",
              "8e4d34f8-b1b7-4c78-9dd6-5ece74f20d83",
              "440b3b1f-8b8c-49e0-93dc-e568a8fb6d7c",
              "f495a6a7-d5a6-4a29-a9dc-c253295a2aa8"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3880,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "ec785027-b87b-4338-b1b8-b38e4df448cb",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T4_GetCountry.js",
            "file": "\\specs\\T4_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "timedOut": false,
                "duration": 2350,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"   //Australia\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'name', 'capital',);\nexpect(byCapital_response.data[0]).to.include.any.keys( 'name', 'capital',);\n//Verify capital_name in 'Name Api' using 'Capital Api'\nexpect(byName_response.data[0].capital).to.equal(byCapital_response.data[0].capital);",
                "err": {},
                "isRoot": false,
                "uuid": "ed5e03f6-6078-4b50-99f2-f60e644c8add",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 1602,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"CN\"  //CHINA\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'population');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'population',);\n//Verify Population value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.population).to.equal(byName_response.data[0].population);\nexpect(byCode_response.data.population).to.equal(byCapital_response.data[0].population);\nexpect(byName_response.data[0].population).to.equal(byCapital_response.data[0].population);",
                "err": {},
                "isRoot": false,
                "uuid": "e59d252c-451a-43d5-9aa0-7f9535016033",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 2317,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"PK\"  //PAKISTAN\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'area');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'area',);\n//Verify AREA value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.area).to.equal(byName_response.data[0].area);\nexpect(byCode_response.data.area).to.equal(byCapital_response.data[0].area);\nexpect(byName_response.data[0].area).to.equal(byCapital_response.data[0].area);",
                "err": {},
                "isRoot": false,
                "uuid": "aad8ce37-5359-4cc8-ab02-860a70a893f3",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "ed5e03f6-6078-4b50-99f2-f60e644c8add",
              "e59d252c-451a-43d5-9aa0-7f9535016033",
              "aad8ce37-5359-4cc8-ab02-860a70a893f3"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6269,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "264f2907-641f-4ce7-b15b-d525194bafc8",
        "title": "Postman Echo API Suite - POST",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T5_echoPost.js",
        "file": "\\specs\\T5_echoPost.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "b5bd22da-50e6-4955-b541-c7c41e72317e",
            "title": "Basic Test",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T5_echoPost.js",
            "file": "\\specs\\T5_echoPost.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - POST Basic Test Test 1",
                "timedOut": false,
                "duration": 1605,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanPost(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "7b25849c-8bc1-4a53-a9b6-d3eff03b7948",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7b25849c-8bc1-4a53-a9b6-d3eff03b7948"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1605,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "5b5ffcf9-3c04-4e72-9717-9f14525316ea",
        "title": "Postman Echo API Suite - GET",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T6_echoGet.js",
        "file": "\\specs\\T6_echoGet.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "c1d85da1-c3fc-4f49-a596-da42bdf60fb0",
            "title": "Basic Test",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T6_echoGet.js",
            "file": "\\specs\\T6_echoGet.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - GET Basic Test Test 1",
                "timedOut": false,
                "duration": 978,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanGet(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "060368d5-b28e-453c-8acc-89fbd4b0b490",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "060368d5-b28e-453c-8acc-89fbd4b0b490"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 978,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}