{
  "stats": {
    "suites": 14,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-05T10:00:44.863Z",
    "end": "2019-02-05T10:01:32.691Z",
    "duration": 47828,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "15a813f0-8142-4fda-9e20-5d594b794ce0",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "13c6ba38-4c9e-453b-81dc-29905be0f33d",
        "title": "Current Weather Data API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T1_GetCurrentWeather.js",
        "file": "\\specs\\T1_GetCurrentWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "4ac842b1-f31b-4834-b38e-69573d147ef2",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T1_GetCurrentWeather.js",
            "file": "\\specs\\T1_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "fullTitle": "Current Weather Data API - Test Suite Basic Shakedown Tests Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "timedOut": false,
                "duration": 1203,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat=0&lon=0&key='+data.ApiKey;\nconsole.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n     \nexpect(currentResponseBody.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "9e3c7ac8-b180-424a-941c-41ed0df48b53",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9e3c7ac8-b180-424a-941c-41ed0df48b53"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1203,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "2b06d083-1b07-4df9-97d4-47cdca830557",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T1_GetCurrentWeather.js",
            "file": "\\specs\\T1_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "fullTitle": "Current Weather Data API - Test Suite Functional Tests Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "timedOut": false,
                "duration": 1162,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat='+data.Current[2].Lat+'&lon='+data.Current[2].Lon+'&key='+data.ApiKey;\nconsole.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n\nexpect(currentResponseBody.data[0]).to.include.any.keys( 'state_code');\n\nexpect(currentResponseBody.data[0].state_code).not.to.be.null;",
                "err": {},
                "isRoot": false,
                "uuid": "fc3fc58a-1e17-41fe-85da-aa066d90f7bf",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fc3fc58a-1e17-41fe-85da-aa066d90f7bf"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1162,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "fad8da94-082a-4491-9b1e-e1ff49fbd86b",
        "title": "Forecast Weather Data API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T2_GetForecastWeather.js",
        "file": "\\specs\\T2_GetForecastWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "937d1b88-c4f3-43a4-94ba-59b373a3d485",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T2_GetForecastWeather.js",
            "file": "\\specs\\T2_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "fullTitle": "Forecast Weather Data API - Test Suite Basic Shakedown Tests Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "timedOut": false,
                "duration": 1183,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code=28546&key='+data.ApiKey;\nconsole.log(\"Running Test for Forecast by Postal Code\"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n     \nexpect(forecastResponseBody.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "e55d80fa-c317-4e52-a71b-a4715d17c754",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e55d80fa-c317-4e52-a71b-a4715d17c754"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1183,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "6ba7f1a9-8a44-40c7-89e7-505add995ff5",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T2_GetForecastWeather.js",
            "file": "\\specs\\T2_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "timedOut": false,
                "duration": 1203,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[2].Postal_Code+'&key='+data.ApiKey;\n\nconsole.log(\"Running Test for Forecast by Postal Code\"+testData);\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj).to.include.any.keys('timestamp_utc');\n    expect(dataObj.timestamp_utc).not.to.be.null;\n    // console.log(\"timestamp_utc = \"+dataObj.timestamp_utc);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "6c586672-47b5-485e-a5f6-8f03ff454ba3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "timedOut": false,
                "duration": 2032,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[2].Postal_Code+'&key='+data.ApiKey;\nconsole.log(\"Running Test for \"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj.weather).to.include.any.keys('icon','code','description');\n    \n    expect(dataObj.weather).not.to.be.null;\n    expect(dataObj.weather.icon).not.to.be.null;\n    expect(dataObj.weather.code).not.to.be.null;\n    expect(dataObj.weather.description).not.to.be.null;\n    // console.log(\"weather = \"+dataObj.weather);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "556a2460-25f1-490a-8b0d-81c06db93d15",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6c586672-47b5-485e-a5f6-8f03ff454ba3",
              "556a2460-25f1-490a-8b0d-81c06db93d15"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3235,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "38cbcb71-e44e-4118-8157-688382bb3dd1",
        "title": "Performance Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T3_PerformanceTest.js",
        "file": "\\specs\\T3_PerformanceTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Verify Response Time less than 3500 ms per API call when both APIs are called 10times",
            "fullTitle": "Performance Test Suite Verify Response Time less than 3500 ms per API call when both APIs are called 10times",
            "timedOut": false,
            "duration": 28750,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "console.log(\"Expected Response Time per Api Request Call = \"+expectedApiResponseTime+\" ms\");\n      \nfor(var i = 0; i < 10; i++) {\n  // console.log(\"Calling APIs in \"+i+\" iteration\")\n  \n  testData1 = data.BaseURL+'current/?lat='+data.Current[i].Lat+'&lon='+data.Current[i].Lon+'&key='+data.ApiKey;\n  testData2 = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly[i].Postal_Code+'&key='+data.ApiKey;\n  currentResponse = await Get_CurrentByGPSCoordinates(testData1);\n  forecastResponse = await Get_ForecastByPostalCode(testData2);\n  expect(currentResponse.statusCode).to.equal(200);  \n  expect(currentResponse.elapsedTime).to.lessThan(expectedApiResponseTime);\n  \n  expect(forecastResponse.statusCode).to.equal(200);\n  expect(forecastResponse.elapsedTime).to.lessThan(expectedApiResponseTime);\n  // console.log(\">>> Response Code of \\'Current Weather By GPS Coordinates\\' Api = \"+currentResponse.statusCode);\n  // console.log(\">>> Response Time of \\'Current Weather By GPS Coordinates\\' Api = \"+currentResponse.elapsedTime);\n  // console.log(\">>> Response Time of \\'Forecast Weather By Postal Code\\' Api = \"+forecastResponse.statusCode);\n  // console.log(\">>> Response Time of \\'Forecast Weather By Postal Code\\' Api = \"+forecastResponse.elapsedTime);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "61ce9cf9-7405-405f-9799-f36c82eb5769",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "61ce9cf9-7405-405f-9799-f36c82eb5769"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 28750,
        "root": false,
        "rootEmpty": false,
        "_timeout": 500000
      },
      {
        "uuid": "623b7fd4-ca38-4a34-901d-001b852eaa76",
        "title": "Rest Countries API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T4_GetCountry.js",
        "file": "\\specs\\T4_GetCountry.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "aedae5e4-3051-49d3-a70b-d79f7755806c",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T4_GetCountry.js",
            "file": "\\specs\\T4_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Name' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Name' Api response is OK",
                "timedOut": false,
                "duration": 2197,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_NAME = \"Australia\"\nbyName_response = await Get_ByName(test.data);\nexpect(byName_response.status).to.equal(200);\nexpect(byName_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "df02105d-722c-4c97-a0e6-1ced8e7c621b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Code' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Code' Api response is OK",
                "timedOut": false,
                "duration": 862,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"\nbyCode_response = await Get_ByCode(test.data);\nexpect(byCode_response.status).to.equal(200);\nexpect(byCode_response.data).to.include.any.keys( 'name', 'topLevelDomain',\n'alpha2Code','alpha3Code','callingCodes','capital','altSpellings','region',\n'subregion','population','demonym','area','nativeName','numericCode','currencies');",
                "err": {},
                "isRoot": false,
                "uuid": "71d21912-9db4-47dc-bd4d-de41effa02c7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Capital' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Capital' Api response is OK",
                "timedOut": false,
                "duration": 877,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CAPITAL = \"Canberra\",\nbyCapital_response = await Get_ByCapital(test.data);\nexpect(byCapital_response.status).to.equal(200);\nexpect(byCapital_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "a36d81ed-0604-40a5-87b6-38ac2d80a31e",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify 'Region' Api response is OK",
                "fullTitle": "Rest Countries API - Test Suite Basic Shakedown Tests Verify 'Region' Api response is OK",
                "timedOut": false,
                "duration": 1201,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_REGION = \"Oceania\"\nbyRegion_response = await Get_ByRegion(test.data);\nexpect(byRegion_response.status).to.equal(200);\nexpect(byRegion_response.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "b8eb43f4-19b6-4632-b908-228a9eb04a8d",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "df02105d-722c-4c97-a0e6-1ced8e7c621b",
              "71d21912-9db4-47dc-bd4d-de41effa02c7",
              "a36d81ed-0604-40a5-87b6-38ac2d80a31e",
              "b8eb43f4-19b6-4632-b908-228a9eb04a8d"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5137,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "e2785f91-87c0-4e4d-96ab-e8ac1b12e405",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T4_GetCountry.js",
            "file": "\\specs\\T4_GetCountry.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify CAPITAL NAME in 'Name Api' using 'Capital Api'",
                "timedOut": false,
                "duration": 1552,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"AU\"   //Australia\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'name', 'capital',);\nexpect(byCapital_response.data[0]).to.include.any.keys( 'name', 'capital',);\n//Verify capital_name in 'Name Api' using 'Capital Api'\nexpect(byName_response.data[0].capital).to.equal(byCapital_response.data[0].capital);",
                "err": {},
                "isRoot": false,
                "uuid": "7a66dff2-ddd7-46a8-8780-7da1fa57501d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify POPULATION value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 1424,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"CN\"  //CHINA\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'population');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'population',);\n//Verify Population value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.population).to.equal(byName_response.data[0].population);\nexpect(byCode_response.data.population).to.equal(byCapital_response.data[0].population);\nexpect(byName_response.data[0].population).to.equal(byCapital_response.data[0].population);",
                "err": {},
                "isRoot": false,
                "uuid": "741053e0-73dd-4612-838a-a6e97bbfd0cd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "fullTitle": "Rest Countries API - Test Suite Functional Tests Verify AREA value is same in 'Name + Code + Capital' Api responses",
                "timedOut": false,
                "duration": 1330,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "test.data.INPUT_CODE = \"PK\"  //PAKISTAN\nbyCode_response = await Get_ByCode(test.data);\n//take name of country + capital from response of CODE api\ntest.data.INPUT_NAME = byCode_response.data.name\ntest.data.INPUT_CAPITAL = byCode_response.data.capital\n//get responses of 'Name api' and 'Capital api'\nbyName_response = await Get_ByName(test.data);\nbyCapital_response = await Get_ByCapital(test.data);\n//expect that both response should have 'Country name' and 'capital'\nexpect(byName_response.data[0]).to.include.any.keys( 'area');\nexpect(byCapital_response.data[0]).to.include.any.keys( 'area',);\n//Verify AREA value is same in Name + Code + Capital Api responses\nexpect(byCode_response.data.area).to.equal(byName_response.data[0].area);\nexpect(byCode_response.data.area).to.equal(byCapital_response.data[0].area);\nexpect(byName_response.data[0].area).to.equal(byCapital_response.data[0].area);",
                "err": {},
                "isRoot": false,
                "uuid": "91947c44-0b06-4800-b57e-682d10fec2ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7a66dff2-ddd7-46a8-8780-7da1fa57501d",
              "741053e0-73dd-4612-838a-a6e97bbfd0cd",
              "91947c44-0b06-4800-b57e-682d10fec2ba"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4306,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "e8e9dc59-4ed1-48cc-aa1e-34458d933c43",
        "title": "Postman Echo API Suite - POST",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T5_echoPost.js",
        "file": "\\specs\\T5_echoPost.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "00a1e32c-0881-4466-8333-f3f22bbff4b0",
            "title": "Basic Test",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T5_echoPost.js",
            "file": "\\specs\\T5_echoPost.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - POST Basic Test Test 1",
                "timedOut": false,
                "duration": 1606,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanPost(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "0a16b978-6701-4945-b6a3-6d8738f77983",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "0a16b978-6701-4945-b6a3-6d8738f77983"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1606,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "50e26d82-4c36-44f7-86ed-886639071f91",
        "title": "Postman Echo API Suite - GET",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T6_echoGet.js",
        "file": "\\specs\\T6_echoGet.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "47b04e53-7298-489d-8f51-224815733a93",
            "title": "Basic Test",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\ApiJavaScriptAutomation\\specs\\T6_echoGet.js",
            "file": "\\specs\\T6_echoGet.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Test 1",
                "fullTitle": "Postman Echo API Suite - GET Basic Test Test 1",
                "timedOut": false,
                "duration": 1095,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "let responseOut = await postmanGet(test.data);\nexpect(responseOut.url).to.equal(test.data.URL);",
                "err": {},
                "isRoot": false,
                "uuid": "02a2f772-bc0a-43b6-a51a-f836a3700f88",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "02a2f772-bc0a-43b6-a51a-f836a3700f88"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1095,
            "root": false,
            "rootEmpty": false,
            "_timeout": 5000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}